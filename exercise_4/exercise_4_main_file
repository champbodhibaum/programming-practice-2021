from Exercise_4 import *
import numpy as np

number_of_loops = 30

#-----------------------------------DE---------------------------------------

bounds = [-5,5]
F=1.0
number_of_variables = 3
number_of_individuals = 100
optimization_method=evaluation_rosenbrock

graphavg1=[]
for x in range(number_of_loops):
    de=DE(number_of_variables,number_of_individuals,F,bounds,optimization_method)
    y=de.optimize1()
    graphavg1.append(y)
    
#----------------------------------PSO---------------------------------------

bounds = [(-5,5),(-5,5),(-5,5)]
number_of_variables = 3
number_of_particles = 100
optimization_method=evaluation_rosenbrock

graphavg2=[]
for i in range(number_of_loops):
    particle=Particle(number_of_variables,number_of_particles,bounds,optimization_method)
    x=particle.optimize2()
    graphavg2.append(x)

graphmean1=np.mean(graphavg1)
graphmean2=np.mean(graphavg2)
if optimization_method==evaluation_rosenbrock:
    print("Optimization method = Rosenbrock")
elif optimization_method==evaluation_salomon:
    print("Optimization method = Salomon")
elif optimization_method==evaluation_sphere:
    print("Optimization method = Sphere")
print("Average value of",number_of_loops,"trials of algorithm DE:",graphmean1)
print("Average value of",number_of_loops,"trials of algorithm PSO:",graphmean2)
